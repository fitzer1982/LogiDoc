"use strict";(self.webpackChunktemp_logi_docs=self.webpackChunktemp_logi_docs||[]).push([[2677],{7794:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"actions-sdk/core-concepts/objects","title":"Core Objects","description":"Understanding the fundamental objects and concepts in the Logi Actions SDK is essential for building effective plugins.","source":"@site/docs/actions-sdk/core-concepts/objects.md","sourceDirName":"actions-sdk/core-concepts","slug":"/actions-sdk/core-concepts/objects","permalink":"/LogiDoc/docs/actions-sdk/core-concepts/objects","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"actionsSdkSidebar","previous":{"title":"Quick Start","permalink":"/LogiDoc/docs/actions-sdk/quick-start"},"next":{"title":"Webhooks","permalink":"/LogiDoc/docs/actions-sdk/core-concepts/webhooks"}}');var s=i(4848),t=i(8453);const c={},a="Core Objects",o={},l=[{value:"Plugin Architecture",id:"plugin-architecture",level:2},{value:"Core Classes",id:"core-classes",level:2},{value:"Plugin",id:"plugin",level:3},{value:"PluginDynamicCommand",id:"plugindynamiccommand",level:3},{value:"PluginDynamicAdjustment",id:"plugindynamicadjustment",level:3},{value:"ClientApplication",id:"clientapplication",level:3},{value:"Object Lifecycle",id:"object-lifecycle",level:2},{value:"Plugin Lifecycle",id:"plugin-lifecycle",level:3},{value:"Command Lifecycle",id:"command-lifecycle",level:3},{value:"Data Flow",id:"data-flow",level:2},{value:"User Interaction Flow",id:"user-interaction-flow",level:3},{value:"State Management",id:"state-management",level:3},{value:"Parameters and Context",id:"parameters-and-context",level:2},{value:"Action Parameters",id:"action-parameters",level:3},{value:"Context Information",id:"context-information",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"\u2705 Do",id:"-do",level:3},{value:"\u274c Don&#39;t",id:"-dont",level:3},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Efficient Command Execution",id:"efficient-command-execution",level:3},{value:"Memory Management",id:"memory-management",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"core-objects",children:"Core Objects"})}),"\n",(0,s.jsx)(n.p,{children:"Understanding the fundamental objects and concepts in the Logi Actions SDK is essential for building effective plugins."}),"\n",(0,s.jsx)(n.h2,{id:"plugin-architecture",children:"Plugin Architecture"}),"\n",(0,s.jsx)(n.p,{children:"The Logi Actions SDK follows a hierarchical structure where plugins contain actions, and actions respond to device interactions."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:"graph TB\r\n    A[Plugin] --\x3e B[Commands]\r\n    A --\x3e C[Adjustments]\r\n    A --\x3e D[Dynamic Folders]\r\n    B --\x3e E[Button Press]\r\n    C --\x3e F[Encoder Rotation]\r\n    D --\x3e G[Touch Interface]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"core-classes",children:"Core Classes"}),"\n",(0,s.jsx)(n.h3,{id:"plugin",children:"Plugin"}),"\n",(0,s.jsx)(n.p,{children:"The main plugin class that serves as the entry point for your plugin."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class MyPlugin : Plugin\r\n{\r\n    public override void Load()\r\n    {\r\n        // Initialize plugin\r\n        this.Info.DisplayName = "My Plugin";\r\n        this.Info.Description = "Plugin description";\r\n    }\r\n\r\n    public override void Unload()\r\n    {\r\n        // Cleanup resources\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Key Properties:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Info.DisplayName"}),": Name shown in UI"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Info.Description"}),": Plugin description"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Assembly"}),": Plugin assembly reference"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"plugindynamiccommand",children:"PluginDynamicCommand"}),"\n",(0,s.jsx)(n.p,{children:"Represents a button or action that users can assign to device controls."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class MyCommand : PluginDynamicCommand\r\n{\r\n    public MyCommand() : base(\r\n        displayName: "My Action",\r\n        description: "What this action does",\r\n        groupName: "My Group")\r\n    {\r\n    }\r\n\r\n    protected override void RunCommand(string actionParameter)\r\n    {\r\n        // Execute when button is pressed\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Key Methods:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RunCommand()"}),": Executed on button press"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GetCommandDisplayName()"}),": Dynamic button text"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GetCommandImage()"}),": Custom button image"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"plugindynamicadjustment",children:"PluginDynamicAdjustment"}),"\n",(0,s.jsx)(n.p,{children:"Handles encoder rotations and continuous value changes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class VolumeAdjustment : PluginDynamicAdjustment\r\n{\r\n    public VolumeAdjustment() : base(\r\n        displayName: "Volume",\r\n        description: "Adjust system volume",\r\n        groupName: "Audio",\r\n        hasReset: true)\r\n    {\r\n    }\r\n\r\n    protected override void ApplyAdjustment(string actionParameter, int diff)\r\n    {\r\n        // Handle encoder rotation\r\n        var currentVolume = GetSystemVolume();\r\n        SetSystemVolume(currentVolume + diff);\r\n    }\r\n\r\n    protected override void RunCommand(string actionParameter)\r\n    {\r\n        // Handle encoder press (reset)\r\n        SetSystemVolume(50); // Reset to 50%\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"clientapplication",children:"ClientApplication"}),"\n",(0,s.jsx)(n.p,{children:"Links your plugin to specific applications for context-aware behavior."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class PhotoshopApplication : ClientApplication\r\n{\r\n    protected override string GetProcessName() => "Photoshop";\r\n\r\n    protected override string GetBundleId() => "com.adobe.Photoshop";\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"object-lifecycle",children:"Object Lifecycle"}),"\n",(0,s.jsx)(n.h3,{id:"plugin-lifecycle",children:"Plugin Lifecycle"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Load"}),": Plugin is initialized"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Commands Registered"}),": Actions become available"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Active"}),": Plugin responds to device interactions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Unload"}),": Plugin is shut down"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public override void Load()\r\n{\r\n    // Subscribe to events\r\n    this.OnApplicationStarted += OnAppStarted;\r\n    this.OnApplicationStopped += OnAppStopped;\r\n}\r\n\r\npublic override void Unload()\r\n{\r\n    // Unsubscribe from events\r\n    this.OnApplicationStarted -= OnAppStarted;\r\n    this.OnApplicationStopped -= OnAppStopped;\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"command-lifecycle",children:"Command Lifecycle"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Construction"}),": Command object created"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Registration"}),": Added to plugin registry"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Assignment"}),": User assigns to device control"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Execution"}),": ",(0,s.jsx)(n.code,{children:"RunCommand()"})," called on interaction"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cleanup"}),": Command disposed when plugin unloads"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-flow",children:"Data Flow"}),"\n",(0,s.jsx)(n.h3,{id:"user-interaction-flow",children:"User Interaction Flow"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\r\n    participant User\r\n    participant Device\r\n    participant Plugin Service\r\n    participant Your Plugin\r\n    \r\n    User->>Device: Press button\r\n    Device->>Plugin Service: Button event\r\n    Plugin Service->>Your Plugin: RunCommand()\r\n    Your Plugin->>Plugin Service: Execute action\r\n    Plugin Service->>Device: Update display\r\n    Device->>User: Visual feedback\n"})}),"\n",(0,s.jsx)(n.h3,{id:"state-management",children:"State Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class StatefulCommand : PluginDynamicCommand\r\n{\r\n    private bool _isEnabled = false;\r\n\r\n    protected override void RunCommand(string actionParameter)\r\n    {\r\n        _isEnabled = !_isEnabled;\r\n        \r\n        // Notify service of state change\r\n        this.ActionImageChanged(actionParameter);\r\n    }\r\n\r\n    protected override string GetCommandDisplayName(string actionParameter, PluginImageSize imageSize)\r\n    {\r\n        return _isEnabled ? "Enabled" : "Disabled";\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"parameters-and-context",children:"Parameters and Context"}),"\n",(0,s.jsx)(n.h3,{id:"action-parameters",children:"Action Parameters"}),"\n",(0,s.jsx)(n.p,{children:"Commands can accept parameters for dynamic behavior:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class ParameterizedCommand : PluginDynamicCommand\r\n{\r\n    public ParameterizedCommand() : base()\r\n    {\r\n        // Add parameters in constructor\r\n        this.AddParameter("param1", "First Option", "Options");\r\n        this.AddParameter("param2", "Second Option", "Options");\r\n    }\r\n\r\n    protected override void RunCommand(string actionParameter)\r\n    {\r\n        switch (actionParameter)\r\n        {\r\n            case "param1":\r\n                // Handle first option\r\n                break;\r\n            case "param2":\r\n                // Handle second option\r\n                break;\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"context-information",children:"Context Information"}),"\n",(0,s.jsx)(n.p,{children:"Access device and application context:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'protected override void RunCommand(string actionParameter)\r\n{\r\n    // Get current application\r\n    var currentApp = this.Plugin.ClientApplication;\r\n    \r\n    // Check device capabilities\r\n    var deviceInfo = this.Plugin.GetDeviceInfo();\r\n    \r\n    // Access plugin settings\r\n    if (this.Plugin.TryGetPluginSetting("setting_key", out string value))\r\n    {\r\n        // Use setting value\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"-do",children:"\u2705 Do"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Keep command logic lightweight and responsive"}),"\n",(0,s.jsx)(n.li,{children:"Use meaningful display names and descriptions"}),"\n",(0,s.jsx)(n.li,{children:"Handle errors gracefully with try-catch blocks"}),"\n",(0,s.jsxs)(n.li,{children:["Implement proper cleanup in ",(0,s.jsx)(n.code,{children:"Unload()"})]}),"\n",(0,s.jsx)(n.li,{children:"Use parameters for similar but distinct actions"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"-dont",children:"\u274c Don't"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Perform long-running operations in ",(0,s.jsx)(n.code,{children:"RunCommand()"})]}),"\n",(0,s.jsx)(n.li,{children:"Block the UI thread with synchronous operations"}),"\n",(0,s.jsx)(n.li,{children:"Ignore exceptions or fail silently"}),"\n",(0,s.jsx)(n.li,{children:"Create too many similar commands (use parameters instead)"}),"\n",(0,s.jsx)(n.li,{children:"Store sensitive data in plain text"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"efficient-command-execution",children:"Efficient Command Execution"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'protected override void RunCommand(string actionParameter)\r\n{\r\n    // Use async operations for I/O\r\n    Task.Run(async () =>\r\n    {\r\n        try\r\n        {\r\n            await PerformLongRunningOperation();\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            // Log error, don\'t crash plugin\r\n            this.Plugin.Log.Error(ex, "Command execution failed");\r\n        }\r\n    });\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class ResourceAwareCommand : PluginDynamicCommand, IDisposable\r\n{\r\n    private readonly HttpClient _httpClient = new HttpClient();\r\n\r\n    public void Dispose()\r\n    {\r\n        _httpClient?.Dispose();\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Learn about device interactions"}),": ",(0,s.jsx)(n.a,{href:"/LogiDoc/docs/actions-sdk/core-concepts/webhooks",children:"Webhooks"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Understand performance limits"}),": ",(0,s.jsx)(n.a,{href:"/LogiDoc/docs/actions-sdk/core-concepts/rate-limits",children:"Rate Limits"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"See practical examples"}),": ",(0,s.jsx)(n.a,{href:"/LogiDoc/docs/actions-sdk/guides/payment-intents",children:"Guides & Tutorials"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Understanding these core objects is fundamental to building effective plugins."})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);