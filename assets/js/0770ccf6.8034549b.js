"use strict";(self.webpackChunktemp_logi_docs=self.webpackChunktemp_logi_docs||[]).push([[6463],{487:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"actions-sdk/guides/webhooks-guide","title":"Webhooks Integration Guide","description":"Practical guide for integrating webhooks into your Logi Actions plugins for real-time external service integration.","source":"@site/docs/actions-sdk/guides/webhooks-guide.md","sourceDirName":"actions-sdk/guides","slug":"/actions-sdk/guides/webhooks-guide","permalink":"/LogiDoc/docs/actions-sdk/guides/webhooks-guide","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"actionsSdkSidebar","previous":{"title":"Building Adjustments","permalink":"/LogiDoc/docs/actions-sdk/guides/save-cards"},"next":{"title":"Sample Projects","permalink":"/LogiDoc/docs/actions-sdk/samples"}}');var o=r(4848),s=r(8453);const i={},a="Webhooks Integration Guide",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Basic Webhook Setup",id:"basic-webhook-setup",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"webhooks-integration-guide",children:"Webhooks Integration Guide"})}),"\n",(0,o.jsx)(n.p,{children:"Practical guide for integrating webhooks into your Logi Actions plugins for real-time external service integration."}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"This guide shows you how to implement webhook endpoints in your plugins to receive real-time notifications from external services."}),"\n",(0,o.jsx)(n.h2,{id:"basic-webhook-setup",children:"Basic Webhook Setup"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'public class WebhookIntegration : PluginDynamicCommand\r\n{\r\n    private readonly HttpListener _listener;\r\n    private readonly string _webhookUrl = "http://localhost:8080/webhook/";\r\n\r\n    public WebhookIntegration() : base("Webhook Receiver", "Receives webhook notifications", "Integration")\r\n    {\r\n        _listener = new HttpListener();\r\n        _listener.Prefixes.Add(_webhookUrl);\r\n        StartWebhookListener();\r\n    }\r\n\r\n    private async void StartWebhookListener()\r\n    {\r\n        try\r\n        {\r\n            _listener.Start();\r\n            this.Plugin.Log.Info($"Webhook listener started at {_webhookUrl}");\r\n\r\n            while (_listener.IsListening)\r\n            {\r\n                var context = await _listener.GetContextAsync();\r\n                _ = Task.Run(() => ProcessWebhook(context));\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            this.Plugin.Log.Error(ex, "Webhook listener error");\r\n        }\r\n    }\r\n\r\n    private async Task ProcessWebhook(HttpListenerContext context)\r\n    {\r\n        try\r\n        {\r\n            using var reader = new StreamReader(context.Request.InputStream);\r\n            var payload = await reader.ReadToEndAsync();\r\n\r\n            // Process the webhook payload\r\n            await HandleWebhookData(payload);\r\n\r\n            // Send success response\r\n            context.Response.StatusCode = 200;\r\n            await context.Response.OutputStream.WriteAsync(Encoding.UTF8.GetBytes("OK"));\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            this.Plugin.Log.Error(ex, "Webhook processing failed");\r\n            context.Response.StatusCode = 500;\r\n        }\r\n        finally\r\n        {\r\n            context.Response.Close();\r\n        }\r\n    }\r\n\r\n    private async Task HandleWebhookData(string payload)\r\n    {\r\n        // Parse and handle webhook data\r\n        var data = JsonSerializer.Deserialize<WebhookData>(payload);\r\n        \r\n        // Update plugin state based on webhook\r\n        this.ActionImageChanged();\r\n    }\r\n\r\n    protected override void RunCommand(string actionParameter)\r\n    {\r\n        // Manual trigger or configuration\r\n    }\r\n\r\n    public override void Dispose()\r\n    {\r\n        _listener?.Stop();\r\n        _listener?.Close();\r\n        base.Dispose();\r\n    }\r\n}\r\n\r\npublic class WebhookData\r\n{\r\n    public string Event { get; set; }\r\n    public DateTime Timestamp { get; set; }\r\n    public Dictionary<string, object> Data { get; set; }\r\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Learn about core concepts"}),": ",(0,o.jsx)(n.a,{href:"/LogiDoc/docs/actions-sdk/core-concepts/objects",children:"Objects"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"See more examples"}),": ",(0,o.jsx)(n.a,{href:"/LogiDoc/docs/actions-sdk/samples",children:"Sample Projects"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(6540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);